// <auto-generated />
using System;
using Forshen.ERP.ProductManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forshen.ERP.ProductManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250730162037_ChangesForBatch")]
    partial class ChangesForBatch
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DimensionProduct", b =>
                {
                    b.Property<int>("DimensionsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("DimensionsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductDimensions", (string)null);
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ExpireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ProductionDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Batch");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Dimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Dimensions", (string)null);
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.DimensionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DimensionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("DimensionId");

                    b.ToTable("DimensionValues", (string)null);
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Variant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsMainVariant")
                        .HasColumnType("bit");

                    b.Property<int?>("MainVariantId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("MainVariantId");

                    b.HasIndex("ProductId");

                    b.ToTable("Variants", (string)null);
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.VariantDimensionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("DimensionValueId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DimensionValueId");

                    b.HasIndex("VariantId");

                    b.ToTable("VariantDimensionValue");
                });

            modelBuilder.Entity("DimensionProduct", b =>
                {
                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Dimension", null)
                        .WithMany()
                        .HasForeignKey("DimensionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.DimensionValue", b =>
                {
                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Batch", "Batch")
                        .WithMany()
                        .HasForeignKey("BatchId");

                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Dimension", "Dimension")
                        .WithMany("DimensionValues")
                        .HasForeignKey("DimensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Dimension");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Variant", b =>
                {
                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Variant", "MainVariant")
                        .WithMany()
                        .HasForeignKey("MainVariantId");

                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Product", "Product")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainVariant");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.VariantDimensionValue", b =>
                {
                    b.HasOne("Forshen.ERP.ProductManagement.Entities.DimensionValue", "DimensionValue")
                        .WithMany()
                        .HasForeignKey("DimensionValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forshen.ERP.ProductManagement.Entities.Variant", "Variant")
                        .WithMany("VariantDimensionValues")
                        .HasForeignKey("VariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DimensionValue");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Dimension", b =>
                {
                    b.Navigation("DimensionValues");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Product", b =>
                {
                    b.Navigation("Variants");
                });

            modelBuilder.Entity("Forshen.ERP.ProductManagement.Entities.Variant", b =>
                {
                    b.Navigation("VariantDimensionValues");
                });
#pragma warning restore 612, 618
        }
    }
}
